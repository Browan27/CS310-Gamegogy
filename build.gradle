buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
      classpath files(mkdir("build/classes/main"))
      classpath files(mkdir("build/resources/main"))

      classpath "org.json:json:20160810"

      classpath "gradle.plugin.org.roboscratch.gradle:gradle-robot:0.1.1"

      classpath "org.robotframework:swinglibrary:1.9.6"
      classpath "org.robotframework:javalib-core:1.2.1"

      classpath "net.sf.opencsv:opencsv:2.3"

      classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE"
      classpath "org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE"
      classpath "org.springframework.boot:spring-boot-starter-test:1.4.2.RELEASE"

      classpath "com.jayway.jsonpath:json-path:2.2.0"
    }
}
plugins {
  id "org.roboscratch.robot" version "0.1.1"
  id "org.springframework.boot" version "1.4.2.RELEASE"
}

apply plugin: "org.springframework.boot"
apply plugin: "java"
apply plugin: "application"
apply plugin: "jacoco"


task uberjar(type: Jar) {
    manifest.from jar.manifest
    classifier = "all"
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

mainClassName = "edu.jsu.mcis.gamegogy.gui.GamegogyGUI"
version = "0.0.1"

bootRepackage {
    mainClass = "edu.jsu.mcis.gamegogy.gui.GamegogyGUI"
}

jar {
    baseName = "GamegogyGUI"
    version =  "0.0.1"
    manifest {
        attributes "Implementation-Title": "Gamegogy",
                   "Implementation-Version": version,
                   "Main-Class": "edu.jsu.mcis.gamegogy.gui.GamegogyGUI"
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
    test {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

run {
  standardOutput = System.out
  standardInput = System.in
}

repositories {
    mavenCentral()
}
dependencies {
  compile "net.sf.opencsv:opencsv:2.3"
  compile "org.json:json:20160810"
  compile "org.robotframework:swinglibrary:1.9.6"
  compile "org.robotframework:javalib-core:1.2.1"

  testCompile group: "junit", name: "junit", version: "4.+"

  compile "org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE"
  testCompile "org.springframework.boot:spring-boot-starter-test:1.4.2.RELEASE"
  testCompile "com.jayway.jsonpath:json-path:2.2.0"
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/*keywords**",
                    "**/*gui**"
            ])
        })
    }
}

runrobot.debugfile = "debug.log"
runrobot.dependsOn build
